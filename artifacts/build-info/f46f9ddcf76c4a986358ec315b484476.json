{
	"id": "f46f9ddcf76c4a986358ec315b484476",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.22",
	"solcLongVersion": "0.8.22+commit.4fc1097e",
	"input": {
		"language": "Solidity",
		"sources": {
			"Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.8.2 <0.9.0;\n\ncontract Ownable {\n    address private _owner;\n\n    constructor() {\n        _owner = msg.sender;\n    }\n\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    modifier onlyOwner() {\n        require(isOwner());\n        _;\n    }\n\n    function isOwner() public view returns (bool) {\n        return msg.sender == _owner;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "isOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Ownable.sol\":65:421  contract Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"Ownable.sol\":117:167  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"Ownable.sol\":150:160  msg.sender */\n  caller\n    /* \"Ownable.sol\":141:147  _owner */\n  0x00\n  dup1\n    /* \"Ownable.sol\":141:160  _owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Ownable.sol\":65:421  contract Ownable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Ownable.sol\":65:421  contract Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x8f32d59b\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Ownable.sol\":173:250  function owner() public view returns (address) {... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":329:419  function isOwner() public view returns (bool) {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_11\n      swap2\n      swap1\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Ownable.sol\":173:250  function owner() public view returns (address) {... */\n    tag_6:\n        /* \"Ownable.sol\":211:218  address */\n      0x00\n        /* \"Ownable.sol\":237:243  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":230:243  return _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":173:250  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Ownable.sol\":329:419  function isOwner() public view returns (bool) {... */\n    tag_10:\n        /* \"Ownable.sol\":369:373  bool */\n      0x00\n        /* \"Ownable.sol\":406:412  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":392:412  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Ownable.sol\":392:402  msg.sender */\n      caller\n        /* \"Ownable.sol\":392:412  msg.sender == _owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Ownable.sol\":385:412  return msg.sender == _owner */\n      swap1\n      pop\n        /* \"Ownable.sol\":329:419  function isOwner() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_15:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_16:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_23\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_15\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_17:\n        /* \"#utility.yul\":328:352   */\n      tag_25\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_16\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_8:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_27\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_17\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:683   */\n    tag_18:\n        /* \"#utility.yul\":627:634   */\n      0x00\n        /* \"#utility.yul\":670:675   */\n      dup2\n        /* \"#utility.yul\":663:676   */\n      iszero\n        /* \"#utility.yul\":656:677   */\n      iszero\n        /* \"#utility.yul\":645:677   */\n      swap1\n      pop\n        /* \"#utility.yul\":593:683   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":689:798   */\n    tag_19:\n        /* \"#utility.yul\":770:791   */\n      tag_30\n        /* \"#utility.yul\":785:790   */\n      dup2\n        /* \"#utility.yul\":770:791   */\n      tag_18\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":765:768   */\n      dup3\n        /* \"#utility.yul\":758:792   */\n      mstore\n        /* \"#utility.yul\":689:798   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":804:1014   */\n    tag_12:\n        /* \"#utility.yul\":891:895   */\n      0x00\n        /* \"#utility.yul\":929:931   */\n      0x20\n        /* \"#utility.yul\":918:927   */\n      dup3\n        /* \"#utility.yul\":914:932   */\n      add\n        /* \"#utility.yul\":906:932   */\n      swap1\n      pop\n        /* \"#utility.yul\":942:1007   */\n      tag_32\n        /* \"#utility.yul\":1004:1005   */\n      0x00\n        /* \"#utility.yul\":993:1002   */\n      dup4\n        /* \"#utility.yul\":989:1006   */\n      add\n        /* \"#utility.yul\":980:986   */\n      dup5\n        /* \"#utility.yul\":942:1007   */\n      tag_19\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":804:1014   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202fdb5fc2fb6b55d66ea54df7a3fbf59cecca675dfd815465aaa118d2b5dba1a164736f6c63430008160033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_12": {
									"entryPoint": null,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50335f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506101b18061005c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80638da5cb5b146100385780638f32d59b14610056575b5f80fd5b610040610074565b60405161004d919061012f565b60405180910390f35b61005e61009b565b60405161006b9190610162565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610119826100f0565b9050919050565b6101298161010f565b82525050565b5f6020820190506101425f830184610120565b92915050565b5f8115159050919050565b61015c81610148565b82525050565b5f6020820190506101755f830184610153565b9291505056fea26469706673582212202fdb5fc2fb6b55d66ea54df7a3fbf59cecca675dfd815465aaa118d2b5dba1a164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x1B1 DUP1 PUSH2 0x5C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x119 DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129 DUP2 PUSH2 0x10F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142 PUSH0 DUP4 ADD DUP5 PUSH2 0x120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C DUP2 PUSH2 0x148 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x175 PUSH0 DUP4 ADD DUP5 PUSH2 0x153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xDB PUSH0 0xC2 0xFB PUSH12 0x55D66EA54DF7A3FBF59CECCA PUSH8 0x5DFD815465AAA118 0xD2 0xB5 0xDB LOG1 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "65:356:0:-:0;;;117:50;;;;;;;;;;150:10;141:6;;:19;;;;;;;;;;;;;;;;;;65:356;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@isOwner_40": {
									"entryPoint": 155,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_20": {
									"entryPoint": 116,
									"id": 20,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 339,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1017:1",
										"nodeType": "YulBlock",
										"src": "0:1017:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:1",
													"nodeType": "YulBlock",
													"src": "52:81:1",
													"statements": [
														{
															"nativeSrc": "62:65:1",
															"nodeType": "YulAssignment",
															"src": "62:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:1",
																		"nodeType": "YulLiteral",
																		"src": "84:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:1"
																},
																"nativeSrc": "73:54:1",
																"nodeType": "YulFunctionCall",
																"src": "73:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:126:1"
											},
											{
												"body": {
													"nativeSrc": "184:51:1",
													"nodeType": "YulBlock",
													"src": "184:51:1",
													"statements": [
														{
															"nativeSrc": "194:35:1",
															"nodeType": "YulAssignment",
															"src": "194:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:1"
																},
																"nativeSrc": "205:24:1",
																"nodeType": "YulFunctionCall",
																"src": "205:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:1",
														"nodeType": "YulTypedName",
														"src": "166:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:1",
														"nodeType": "YulTypedName",
														"src": "176:7:1",
														"type": ""
													}
												],
												"src": "139:96:1"
											},
											{
												"body": {
													"nativeSrc": "306:53:1",
													"nodeType": "YulBlock",
													"src": "306:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:1"
																		},
																		"nativeSrc": "328:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:1"
																},
																"nativeSrc": "316:37:1",
																"nodeType": "YulFunctionCall",
																"src": "316:37:1"
															},
															"nativeSrc": "316:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:1",
														"nodeType": "YulTypedName",
														"src": "294:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:1",
														"nodeType": "YulTypedName",
														"src": "301:3:1",
														"type": ""
													}
												],
												"src": "241:118:1"
											},
											{
												"body": {
													"nativeSrc": "463:124:1",
													"nodeType": "YulBlock",
													"src": "463:124:1",
													"statements": [
														{
															"nativeSrc": "473:26:1",
															"nodeType": "YulAssignment",
															"src": "473:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:1",
																		"nodeType": "YulLiteral",
																		"src": "496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:1"
																},
																"nativeSrc": "481:18:1",
																"nodeType": "YulFunctionCall",
																"src": "481:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:1",
																				"nodeType": "YulLiteral",
																				"src": "577:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:1"
																		},
																		"nativeSrc": "562:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:1"
																},
																"nativeSrc": "509:71:1",
																"nodeType": "YulFunctionCall",
																"src": "509:71:1"
															},
															"nativeSrc": "509:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:1",
														"nodeType": "YulTypedName",
														"src": "435:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:1",
														"nodeType": "YulTypedName",
														"src": "447:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:1",
														"nodeType": "YulTypedName",
														"src": "458:4:1",
														"type": ""
													}
												],
												"src": "365:222:1"
											},
											{
												"body": {
													"nativeSrc": "635:48:1",
													"nodeType": "YulBlock",
													"src": "635:48:1",
													"statements": [
														{
															"nativeSrc": "645:32:1",
															"nodeType": "YulAssignment",
															"src": "645:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "670:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "670:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "663:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "663:6:1"
																		},
																		"nativeSrc": "663:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "663:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "656:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "656:6:1"
																},
																"nativeSrc": "656:21:1",
																"nodeType": "YulFunctionCall",
																"src": "656:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "645:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "593:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "617:5:1",
														"nodeType": "YulTypedName",
														"src": "617:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "627:7:1",
														"nodeType": "YulTypedName",
														"src": "627:7:1",
														"type": ""
													}
												],
												"src": "593:90:1"
											},
											{
												"body": {
													"nativeSrc": "748:50:1",
													"nodeType": "YulBlock",
													"src": "748:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "765:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "765:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "785:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "785:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "770:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "770:14:1"
																		},
																		"nativeSrc": "770:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "770:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "758:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:1"
																},
																"nativeSrc": "758:34:1",
																"nodeType": "YulFunctionCall",
																"src": "758:34:1"
															},
															"nativeSrc": "758:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "758:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "689:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "736:5:1",
														"nodeType": "YulTypedName",
														"src": "736:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "743:3:1",
														"nodeType": "YulTypedName",
														"src": "743:3:1",
														"type": ""
													}
												],
												"src": "689:109:1"
											},
											{
												"body": {
													"nativeSrc": "896:118:1",
													"nodeType": "YulBlock",
													"src": "896:118:1",
													"statements": [
														{
															"nativeSrc": "906:26:1",
															"nodeType": "YulAssignment",
															"src": "906:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "918:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "918:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "929:2:1",
																		"nodeType": "YulLiteral",
																		"src": "929:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "914:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "914:3:1"
																},
																"nativeSrc": "914:18:1",
																"nodeType": "YulFunctionCall",
																"src": "914:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "906:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "906:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "980:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "980:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "993:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "993:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1004:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1004:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "989:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "989:3:1"
																		},
																		"nativeSrc": "989:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "989:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "942:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "942:37:1"
																},
																"nativeSrc": "942:65:1",
																"nodeType": "YulFunctionCall",
																"src": "942:65:1"
															},
															"nativeSrc": "942:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "942:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "804:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "868:9:1",
														"nodeType": "YulTypedName",
														"src": "868:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "880:6:1",
														"nodeType": "YulTypedName",
														"src": "880:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "891:4:1",
														"nodeType": "YulTypedName",
														"src": "891:4:1",
														"type": ""
													}
												],
												"src": "804:210:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80638da5cb5b146100385780638f32d59b14610056575b5f80fd5b610040610074565b60405161004d919061012f565b60405180910390f35b61005e61009b565b60405161006b9190610162565b60405180910390f35b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614905090565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610119826100f0565b9050919050565b6101298161010f565b82525050565b5f6020820190506101425f830184610120565b92915050565b5f8115159050919050565b61015c81610148565b82525050565b5f6020820190506101755f830184610153565b9291505056fea26469706673582212202fdb5fc2fb6b55d66ea54df7a3fbf59cecca675dfd815465aaa118d2b5dba1a164736f6c63430008160033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0x8F32D59B EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x12F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x162 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x119 DUP3 PUSH2 0xF0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x129 DUP2 PUSH2 0x10F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x142 PUSH0 DUP4 ADD DUP5 PUSH2 0x120 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15C DUP2 PUSH2 0x148 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x175 PUSH0 DUP4 ADD DUP5 PUSH2 0x153 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xDB PUSH0 0xC2 0xFB PUSH12 0x55D66EA54DF7A3FBF59CECCA PUSH8 0x5DFD815465AAA118 0xD2 0xB5 0xDB LOG1 LOG1 PUSH5 0x736F6C6343 STOP ADDMOD AND STOP CALLER ",
							"sourceMap": "65:356:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;173:77;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;329:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;173:77;211:7;237:6;;;;;;;;;;;230:13;;173:77;:::o;329:90::-;369:4;406:6;;;;;;;;;;;392:20;;:10;:20;;;385:27;;329:90;:::o;7:126:1:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:90::-;627:7;670:5;663:13;656:21;645:32;;593:90;;;:::o;689:109::-;770:21;785:5;770:21;:::i;:::-;765:3;758:34;689:109;;:::o;804:210::-;891:4;929:2;918:9;914:18;906:26;;942:65;1004:1;993:9;989:17;980:6;942:65;:::i;:::-;804:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "86600",
								"executionCost": "24398",
								"totalCost": "110998"
							},
							"external": {
								"isOwner()": "2490",
								"owner()": "2493"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 65,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 65,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 65,
									"end": 421,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 117,
									"end": 167,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 117,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 117,
									"end": 167,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 117,
									"end": 167,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 167,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 117,
									"end": 167,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 117,
									"end": 167,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 117,
									"end": 167,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 117,
									"end": 167,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 117,
									"end": 167,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 117,
									"end": 167,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 150,
									"end": 160,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 141,
									"end": 147,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 141,
									"end": 147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 141,
									"end": 160,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 141,
									"end": 160,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 141,
									"end": 160,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 141,
									"end": 160,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 65,
									"end": 421,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 421,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 65,
									"end": 421,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 65,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 421,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 65,
									"end": 421,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 65,
									"end": 421,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fdb5fc2fb6b55d66ea54df7a3fbf59cecca675dfd815465aaa118d2b5dba1a164736f6c63430008160033",
									".code": [
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "8F32D59B"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65,
											"end": 421,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65,
											"end": 421,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 173,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 173,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 173,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 173,
											"end": 250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 173,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 173,
											"end": 250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 329,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 329,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 329,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 329,
											"end": 419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 329,
											"end": 419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 329,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 329,
											"end": 419,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 173,
											"end": 250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 211,
											"end": 218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 237,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 237,
											"end": 243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 237,
											"end": 243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 237,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 237,
											"end": 243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 237,
											"end": 243,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 237,
											"end": 243,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 237,
											"end": 243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 230,
											"end": 243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 230,
											"end": 243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 173,
											"end": 250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 329,
											"end": 419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 369,
											"end": 373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 406,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 406,
											"end": 412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 392,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 392,
											"end": 412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 392,
											"end": 402,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 392,
											"end": 412,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 392,
											"end": 412,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 392,
											"end": 412,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 385,
											"end": 412,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 385,
											"end": 412,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 329,
											"end": 419,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 593,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 627,
											"end": 634,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 663,
											"end": 676,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 656,
											"end": 677,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 645,
											"end": 677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 645,
											"end": 677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 593,
											"end": 683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 798,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 689,
											"end": 798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 785,
											"end": 790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 770,
											"end": 791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 770,
											"end": 791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 770,
											"end": 791,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 770,
											"end": 791,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 765,
											"end": 768,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 689,
											"end": 798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 891,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 929,
											"end": 931,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 918,
											"end": 927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 914,
											"end": 932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 906,
											"end": 932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 906,
											"end": 932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1004,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 993,
											"end": 1002,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 989,
											"end": 1006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 980,
											"end": 986,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 942,
											"end": 1007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 942,
											"end": 1007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 804,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"Ownable.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"isOwner()": "8f32d59b",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.22+commit.4fc1097e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Ownable.sol\":\"Ownable\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Ownable.sol\":{\"keccak256\":\"0xc835ca62f53ffe47f6c9f08adc4fa463b2bba37da525e6e03b043b7bda0a213b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8986837714f959231da0c216e14a09f09a0c1b3c15a516cfe371421cfe5e68d8\",\"dweb:/ipfs/QmNSm5gm5iBCarNWNt8wDq3WKdJ5pW6VrxnybLajUqB6JA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Ownable.sol": {
				"ast": {
					"absolutePath": "Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							41
						]
					},
					"id": 42,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".2",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "Ownable",
							"nameLocation": "74:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "104:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 41,
									"src": "88:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "88:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 11,
										"nodeType": "Block",
										"src": "131:36:0",
										"statements": [
											{
												"expression": {
													"id": 9,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 6,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "141:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 7,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "150:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "154:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "150:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "141:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 10,
												"nodeType": "ExpressionStatement",
												"src": "141:19:0"
											}
										]
									},
									"id": 12,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "128:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "131:0:0"
									},
									"scope": 41,
									"src": "117:50:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "220:30:0",
										"statements": [
											{
												"expression": {
													"id": 17,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "237:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 16,
												"id": 18,
												"nodeType": "Return",
												"src": "230:13:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "182:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "211:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "210:9:0"
									},
									"scope": 41,
									"src": "173:77:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "277:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 23,
																"name": "isOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "295:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "295:9:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 22,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "287:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "287:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "287:18:0"
											},
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "315:1:0"
											}
										]
									},
									"id": 29,
									"name": "onlyOwner",
									"nameLocation": "265:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "274:2:0"
									},
									"src": "256:67:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "375:44:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 34,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "392:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "396:6:0",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "392:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "406:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "392:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 33,
												"id": 38,
												"nodeType": "Return",
												"src": "385:27:0"
											}
										]
									},
									"functionSelector": "8f32d59b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isOwner",
									"nameLocation": "338:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "345:2:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "369:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 31,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "369:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "368:6:0"
									},
									"scope": 41,
									"src": "329:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 42,
							"src": "65:356:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:390:0"
				},
				"id": 0
			}
		}
	}
}